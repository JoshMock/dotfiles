#!/usr/bin/env python3

import argparse
import subprocess
import os
from urllib.parse import urlparse, urlunparse

parser = argparse.ArgumentParser()
parser.add_argument("--path", required=False)
parser.add_argument("--url", required=False)
args = parser.parse_args()


def get_from_songwhip():
    pass


def build_uri(arg):
    parsed = urlparse(arg)

    if parsed.netloc == "listen.tidal.com":
        return "tidal" + ":".join(parsed.path.split("/"))
    elif parsed.netloc == "tidal.com":
        return "tidal:" + ":".join(parsed.path.split("/")[2:])
    elif parsed.netloc.endswith(".bandcamp.com"):
        return f"bandcamp:{urlunparse(parsed)}"
    elif parsed.netloc.endswith("songwhip.com"):
        subprocess.call(["songwhip"])
    elif parsed.netloc in ['www.youtube.com', 'youtu.be']:
        return f"youtube:{urlunparse(parsed)}"


def add_to_mopidy(key):
    if key:
        subprocess.call(["mpc", "-h", "::", "add", key])
    else:
        print(f"No valid item found in:\n\n{key}")
        exit(1)


if args.path:
    arg = args.path
    all_files = []
    if os.path.isfile(arg) or os.path.islink(arg):
        all_files.append(f"file://{os.path.join(os.getcwd(), arg)}")
    elif os.path.isdir(arg):
        for root, dirs, files in os.walk(arg):
            for f in files:
                all_files.append(f"file://{os.path.join(os.getcwd(), root, f)}")

    all_files.sort()
    for f in all_files:
        add_to_mopidy(f)
elif args.url:
    add_to_mopidy(build_uri(args.url))
else:
    # get from clipboard
    if os.environ.get('XDG_SESSION_TYPE') == 'wayland':
        clipboard = subprocess.Popen(
            ["wl-paste", "-n"],
            stdout=subprocess.PIPE,
            stderr=subprocess.STDOUT,
        )
    else:
        clipboard = subprocess.Popen(
            ["xclip", "-selection", "clipboard", "-o"],
            stdout=subprocess.PIPE,
            stderr=subprocess.STDOUT,
        )

    stdout, stderr = clipboard.communicate()

    if stderr:
        print(str(stderr).strip())
        exit(1)

    add_to_mopidy(build_uri(stdout.decode("utf-8")))
